.intel_syntax noprefix
    .section    .rodata
.LC4:
    .string "-c"
.LC5:
    .string "%lf %lf"
.LC6:
    .string "%lf\n"
.LC8:
    .string "Program execution time: %lf\n"
.LC9:
    .string "-f"
.LC10:
    .string "r"
.LC11:
    .string "w"
    .align 8
.LC12:
    .string "Please enter one of the following keys: -f, -c"
    .text
    .globl  main
    .type   main, @function
main:
    push    rbp
    mov rbp, rsp
    add rsp, -128
    mov DWORD PTR -116[rbp], edi  # argc
    mov QWORD PTR -128[rbp], rsi  # argv
    xor eax, eax
    movsd   xmm0, QWORD PTR .LC3[rip]
    movsd   QWORD PTR -88[rbp], xmm0
    mov rax, QWORD PTR -128[rbp]
    add rax, 8
    mov rax, QWORD PTR [rax] 
    lea rsi, .LC4[rip]       # arg2 - "-c"
    mov rdi, rax             # arg1 - argv[1]
    call    strcmp@PLT
    test    eax, eax
    jne .L12
    lea rdx, -96[rbp]   # arg3 - &b
    lea rax, -104[rbp]
    mov rsi, rax        # arg2 - &a
    lea rdi, .LC5[rip]  # arg1 - "%lf %lf"
    mov eax, 0
    call    __isoc99_scanf@PLT
    call    clock@PLT
    mov QWORD PTR -32[rbp], rax
    movsd   xmm0, QWORD PTR -96[rbp]
    mov rax, QWORD PTR -104[rbp]
    movsd   xmm1, QWORD PTR -88[rbp]
    movapd  xmm2, xmm1  # arg3 - eps
    movapd  xmm1, xmm0  # arg2 - b
    movq    xmm0, rax   # arg1 - a
    call    solve       
    movq    rax, xmm0
    mov QWORD PTR -56[rbp], rax
    call    clock@PLT
    mov QWORD PTR -24[rbp], rax
    mov rax, QWORD PTR -56[rbp]
    movq    xmm0, rax       # arg2 - res
    lea rdi, .LC6[rip]  # arg1 - "%lf\n"
    mov eax, 1
    call    printf@PLT
    mov rax, QWORD PTR -24[rbp]
    sub rax, QWORD PTR -32[rbp]
    cvtsi2sd    xmm0, rax
    movsd   xmm1, QWORD PTR .LC7[rip]
    divsd   xmm0, xmm1
    movsd   QWORD PTR -16[rbp], xmm0
    mov rax, QWORD PTR -16[rbp]
    movq    xmm0, rax       # arg2 - time_spent
    lea rdi, .LC8[rip]  # arg1 - "Program execution time: %lf\n"
    mov eax, 1
    call    printf@PLT
    jmp .L13
.L12:
    mov rax, QWORD PTR -128[rbp]
    add rax, 8
    mov rax, QWORD PTR [rax]
    lea rsi, .LC9[rip] # arg2 - "-f"
    mov rdi, rax       # arg1 - argv[1]
    call    strcmp@PLT
    test    eax, eax
    jne .L14
    mov rax, QWORD PTR -128[rbp]
    add rax, 16
    mov rax, QWORD PTR [rax]
    lea rsi, .LC10[rip]       # arg2 - "r"
    mov rdi, rax              # arg1 - argv[2]
    call    fopen@PLT
    mov QWORD PTR -80[rbp], rax
    mov rax, QWORD PTR -128[rbp]
    add rax, 24
    mov rax, QWORD PTR [rax]
    lea rsi, .LC11[rip]  # arg2 - "w"
    mov rdi, rax         # arg1 - argv[3]
    call    fopen@PLT
    mov QWORD PTR -72[rbp], rax
    lea rcx, -96[rbp]           # arg4 - &b
    lea rdx, -104[rbp]          # arg3 - &a
    mov rax, QWORD PTR -80[rbp]
    lea rsi, .LC5[rip]          # arg2 - "%lf %lf"
    mov rdi, rax                # arg1 - input
    mov eax, 0
    call    __isoc99_fscanf@PLT
    call    clock@PLT
    mov QWORD PTR -64[rbp], rax
    movsd   xmm0, QWORD PTR -96[rbp]
    mov rax, QWORD PTR -104[rbp]
    movsd   xmm1, QWORD PTR -88[rbp]
    movapd  xmm2, xmm1  # arg3 - eps
    movapd  xmm1, xmm0  # arg2 - b
    movq    xmm0, rax   # arg1 - a
    call    solve
    movq    rax, xmm0
    mov QWORD PTR -56[rbp], rax
    call    clock@PLT
    mov QWORD PTR -48[rbp], rax
    mov rdx, QWORD PTR -56[rbp]
    mov rax, QWORD PTR -72[rbp]
    movq    xmm0, rdx      # arg3 - res
    lea rsi, .LC6[rip] # arg2 - "%lf\n"
    mov rdi, rax       # arg1 - output
    mov eax, 1
    call    fprintf@PLT
    mov rax, QWORD PTR -48[rbp]
    sub rax, QWORD PTR -64[rbp]
    cvtsi2sd    xmm0, rax
    movsd   xmm1, QWORD PTR .LC7[rip]
    divsd   xmm0, xmm1
    movsd   QWORD PTR -40[rbp], xmm0
    mov rax, QWORD PTR -40[rbp]
    movq    xmm0, rax       # arg2 - time_spent
    lea rdi, .LC8[rip]  # arg1 - "Program execution time: %lf\n"
    mov eax, 1
    call    printf@PLT
    mov rax, QWORD PTR -80[rbp]
    mov rdi, rax    # arg1 - input
    call    fclose@PLT
    mov rax, QWORD PTR -72[rbp]
    mov rdi, rax    # arg1 - output
    call    fclose@PLT
    jmp .L13
.L14:
    lea rdi, .LC12[rip] # arg1 - "Please enter one of the following keys: -f, -c\n"
    call    puts@PLT
.L13:
    mov eax, 0
    leave
    ret
    .size   main, .-main
    .section    .rodata
    .align 8
.LC0:
    .long   0
    .long   1072693248
    .align 8
.LC1:
    .long   0
    .long   1073741824
    .align 8
.LC3:
    .long   2696277389
    .long   1051772663
    .align 8
.LC7:
    .long   0
    .long   1093567616