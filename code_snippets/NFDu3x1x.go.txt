package main
 
import (
    "encoding/json"
    "fmt"
    "io/ioutil"
    "log"
)
 
type car struct {
    brand          string
    creationYear   int
    capacity       int
    isLaunched     bool
    isWindowOpened bool
    capacityFilled int
}
 
type easyCar struct {
    name      car
    typeOfCar string
}
 
type truck struct {
    name      car
    typeOfCar string
}
 
func main() {
    var car1 easyCar = easyCar{car{"Mazda", 1999, 200, false, false, 20}, "car"}
    var truck1 truck = truck{car{"Volga", 2000, 2000, true, true, 100}, "truck"}
    fmt.Println(car1)
    fmt.Println(truck1)
 
    var queue []car
 
    queue = append(queue, car1.name)
    queue = append(queue, truck1.name)
    fmt.Println(queue)
 
    addressBook := make(map[string][]int)
    addressBook["Yura"] = []int{8912391283}
    addressBook["Misha"] = []int{89114312315}
    addressBook["Misha"] = append(addressBook["Misha"], 89155243627)
    addressBook["Misha"] = append(addressBook["Misha"], 84375734643)
    addressBook["Yura"] = append(addressBook["Yura"], 45435345345)
    fmt.Println(addressBook)
    for name, numbers := range addressBook {
        fmt.Println("Абонент:", name)
        for i, number := range numbers {
            fmt.Printf("\t %v) %v \n", i+1, number)
        }
    }
 
    b, err := json.Marshal(addressBook)
    if err != nil {
        log.Println(b)
        return
    }
    err = ioutil.WriteFile("output.json", b, 0644)
    if err != nil {
        panic(err)
    }
}