local EV
 
getgenv().InfBoost = false;
getgenv().Princess = false;
getgenv().Points = false;
getgenv().Sword = false;
getgenv().Best = false;
getgenv().Egg = false;
 
function Hug()
    spawn(function ()
        while getgenv().InfBoost == true do
local args = {[1] = true} game:GetService("ReplicatedStorage").Remote.Princess.PrincessHug:FireServer(unpack(args)) wait()
        end
    end)
end
function Unlock()
    spawn(function ()
        while getgenv().Princess == true do
local args = {[1] = 1002} game:GetService("ReplicatedStorage").Remote.Princess.PrincessClaim:InvokeServer(unpack(args)) wait()
local args = {[1] = 1003} game:GetService("ReplicatedStorage").Remote.Princess.PrincessClaim:InvokeServer(unpack(args)) wait()
local args = {[1] = 1004} game:GetService("ReplicatedStorage").Remote.Princess.PrincessClaim:InvokeServer(unpack(args)) wait()
local args = {[1] = 1005} game:GetService("ReplicatedStorage").Remote.Princess.PrincessClaim:InvokeServer(unpack(args)) wait()
local args = {[1] = 1006} game:GetService("ReplicatedStorage").Remote.Princess.PrincessClaim:InvokeServer(unpack(args)) wait()
local args = {[1] = 1007} game:GetService("ReplicatedStorage").Remote.Princess.PrincessClaim:InvokeServer(unpack(args)) wait()
local args = {[1] = 1008} game:GetService("ReplicatedStorage").Remote.Princess.PrincessClaim:InvokeServer(unpack(args)) wait()
local args = {[1] = 1009} game:GetService("ReplicatedStorage").Remote.Princess.PrincessClaim:InvokeServer(unpack(args)) wait()
local args = {[1] = 1010} game:GetService("ReplicatedStorage").Remote.Princess.PrincessClaim:InvokeServer(unpack(args)) wait()
        end
    end)
end
function Invest()
    spawn(function ()
        while getgenv().Points do
local args = {[1] = "Luck"} game:GetService("ReplicatedStorage").Remote.Profile.AddPoint:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "Speed"} game:GetService("ReplicatedStorage").Remote.Profile.AddPoint:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "Attack"} game:GetService("ReplicatedStorage").Remote.Profile.AddPoint:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "Health"} game:GetService("ReplicatedStorage").Remote.Profile.AddPoint:FireServer(unpack(args)) wait(0.1)
        end
    end)
end
function Swing()
    spawn(function ()
        while getgenv().Sword == true do
game:GetService("ReplicatedStorage").Remote.Weapon.TakeDamage:FireServer() wait()
        end
    end)
end
function Equip()
    spawn(function ()
        while getgenv().Best == true do
game:GetService("ReplicatedStorage").Remote.Weapon.EquipBest:FireServer() wait(0.1)
 
        end
    end)
end
function Hatch()
    spawn(function ()
        while getgenv().Egg == true do
if EV > "0" then
if EV == "1" then local args = {[1] = 1,[2] = "Open1",[3] = {}}game:GetService("ReplicatedStorage").Remote.Hatch.EggHatch:InvokeServer(unpack(args)) wait(0.1) end
if EV == "2" then local args = {[1] = 2,[2] = "Open1",[3] = {}}game:GetService("ReplicatedStorage").Remote.Hatch.EggHatch:InvokeServer(unpack(args)) wait(0.1) end
if EV == "3" then local args = {[1] = 3,[2] = "Open1",[3] = {}}game:GetService("ReplicatedStorage").Remote.Hatch.EggHatch:InvokeServer(unpack(args)) wait(0.1) end
if EV == "4" then local args = {[1] = 4,[2] = "Open1",[3] = {}}game:GetService("ReplicatedStorage").Remote.Hatch.EggHatch:InvokeServer(unpack(args)) wait(0.1) end
if EV == "5" then local args = {[1] = 5,[2] = "Open1",[3] = {}}game:GetService("ReplicatedStorage").Remote.Hatch.EggHatch:InvokeServer(unpack(args)) wait(0.1) end
if EV == "6" then local args = {[1] = 6,[2] = "Open1",[3] = {}}game:GetService("ReplicatedStorage").Remote.Hatch.EggHatch:InvokeServer(unpack(args)) wait(0.1) end
if EV == "7" then local args = {[1] = 7,[2] = "Open1",[3] = {}}game:GetService("ReplicatedStorage").Remote.Hatch.EggHatch:InvokeServer(unpack(args)) wait(0.1) end
if EV == "8" then local args = {[1] = 8,[2] = "Open1",[3] = {}}game:GetService("ReplicatedStorage").Remote.Hatch.EggHatch:InvokeServer(unpack(args)) wait(0.1) end
            end
        end
    end)
end
 
local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()
 
local w = library:CreateWindow("simp for pixels")
 
local b = w:CreateFolder("Main")
 
b:Button("Redeem Codes",function()
local args = {[1] = "Welcome"} game:GetService("ReplicatedStorage").Remote.Setting.CodeReward:FireServer(unpack(args)) wait()
local args = {[1] = "1000like"} game:GetService("ReplicatedStorage").Remote.Setting.CodeReward:FireServer(unpack(args)) wait()
local args = {[1] = "5000like"} game:GetService("ReplicatedStorage").Remote.Setting.CodeReward:FireServer(unpack(args)) wait()
local args = {[1] = "10000like"} game:GetService("ReplicatedStorage").Remote.Setting.CodeReward:FireServer(unpack(args)) wait()
local args = {[1] = "50000like"} game:GetService("ReplicatedStorage").Remote.Setting.CodeReward:FireServer(unpack(args)) wait()
local args = {[1] = "100000like"} game:GetService("ReplicatedStorage").Remote.Setting.CodeReward:FireServer(unpack(args)) wait()
end)
 
b:Toggle("Auto Swing",function(val)
getgenv().Sword = val
Swing()
end)
 
b:Toggle("Inf. Princess Buff",function(val)
getgenv().InfBoost = val
Hug()
end)
 
b:Toggle("Invest Points",function(val)
getgenv().Points = val
Invest()
end)
 
b:Toggle("Best Sword",function(val)
getgenv().Best = val
Equip()
end)
 
b:Toggle("Auto Hatch",function(val)
getgenv().Egg = val
Hatch()
end)
 
b:Dropdown("Select",{"1","2","3","4","5","6","7","8"},true,function(val)
EV = val
end)
 
b:Label("Made by X_LuaF#0705",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(69,69,69);})
 
local w = library:CreateWindow("LocalPlayer")
 
local b = w:CreateFolder("LP")
 
b:DestroyGui()
 
b:Button("Copy Discord Invite",function() setclipboard("discord.gg/8tRb8MQcW5") end)
b:Button("Full Version",function() loadstring(game:HttpGet("https://pastebin.com/raw/GphZf9Xe", true))() end)
b:Button("Rejoin",function() loadstring(game:HttpGet("https://pastebin.com/raw/mM7JBG5h", true))() end)
b:Button("Reset",function() loadstring(game:HttpGet("https://pastebin.com/raw/EEY6SATj", true))() end)
 
local S
local J
local H
local G
 
b:Box("Speed","number",function(val) S = val end)
b:Box("Jump","number",function(val) J = val end)
b:Box("Hip Height","number",function(val) H = val end)
b:Box("Gravity","number",function(val) G = val end)
 
b:Toggle("Speed",function(bool) getgenv().Speed = bool Speed(S) end)
b:Toggle("Jump",function(bool) getgenv().Jump = bool Jump(J) end)
b:Toggle("Hip Height",function(bool) getgenv().Hip = bool Hip(H) end)
b:Toggle("Gravity",function(bool) getgenv().Grav = bool Grav(G) end)
 
b:Slider("FOV (Default is 70)",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)
 
getgenv().Speed = false;
getgenv().Jump = false;
getgenv().Hip = false;
getgenv().Chat = false;
getgenv().Grav = false;
 
function TPCFrame(Player_CFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end
 
function Chat(Mes, Freq)
    spawn(function ()
        while getgenv().Chat == true do
local args = {[1] = Mes,[2] = "All"} game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
wait(Freq)
        end
    end)
end
 
function Speed(Nume)
    spawn(function ()
        if getgenv().Speed == true then
            while getgenv().Speed == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Nume
                wait()
            end
        elseif getgenv().Speed == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end)
end
function Jump(Nume)
    spawn(function ()
        if getgenv().Jump == true then
            while getgenv().Jump == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Nume
                wait()
        end
    elseif getgenv().Jump == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 50
        end
    end)
end
function Hip(Nume)
    spawn(function ()
        if getgenv().Hip == true then
            while getgenv().Hip == true do
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = Nume
            wait()
        end
    elseif getgenv().Hip == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = 0.1
        end
    end)
end
function Grav(Nume)
    spawn(function ()
        if getgenv().Grav == true then
            while getgenv().Grav == true do
                game:GetService("Workspace").Gravity = Nume
            wait()
        end
    elseif getgenv().Grav == false then
        game:GetService("Workspace").Gravity = 196.2
        end
    end)
end