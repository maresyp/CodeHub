package main
 
import "fmt"
 
type position struct {
    x int
    y int
}
 
type allPos []position
 
func main() {
    var horse position = position{0, 0}
    fmt.Println(horse.whereGo())
}
 
func (horse position) whereGo() allPos {
    arr := allPos{}
    if horse.x+3 < 8 && horse.y+1 <= 8 {
        arr = append(arr, position{horse.x + 3, horse.y + 1})
    }
    if horse.x+3 < 8 && horse.y-1 >= 0 {
        arr = append(arr, position{horse.x + 3, horse.y - 1})
    }
    if horse.x+1 < 8 && horse.y+3 <= 8 {
        arr = append(arr, position{horse.x + 1, horse.y + 3})
    }
    if horse.x+1 < 8 && horse.y-3 >= 0 {
        arr = append(arr, position{horse.x + 1, horse.y - 3})
    }
    return arr
}