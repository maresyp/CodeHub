class TextFieldAutocomplete extends StatelessWidget {
  const TextFieldAutocomplete(Key? key, this._textEditingController,
      this._focusNode, this._list, this.w)
      : super(key: key);
 
  final TextEditingController _textEditingController;
  final FocusNode _focusNode;
  final List<String> _list;
  final double w;
  @override
  Widget build(BuildContext context) {
    return RawAutocomplete(optionsBuilder: (TextEditingValue textEditingValue) {
      if (textEditingValue.text == '') {
        return const Iterable<String>.empty();
      } else {
        List<String> matches = <String>[];
        matches.addAll(_list);
 
        matches.retainWhere((s) {
          return s.toLowerCase().contains(textEditingValue.text.toLowerCase());
        });
        return matches;
      }
    }, onSelected: (String selection) {
      print('You just selected $selection');
    }, fieldViewBuilder: (BuildContext context, _textEditingController,
        _focusNode, VoidCallback onFieldSubmitted) {
      return TextFormField(
        controller: _textEditingController,
        focusNode: _focusNode,
        onFieldSubmitted: (String value) {
          onFieldSubmitted();
        },
      );
    }, optionsViewBuilder: (BuildContext context,
        void Function(String) onSelected, Iterable<String> options) {
      return Material(
          child: SingleChildScrollView(
              child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: options.map((opt) {
          return SizedBox(
            width: w * 0.15,
            child: InkWell(
                onTap: () {
                  onSelected(opt);
                },
                child: Container(
                    width: w * 0.15,
                    padding: const EdgeInsets.only(right: 60),
                    child: Card(
                        child: Container(
                      width: w * 0.015,
                      padding: const EdgeInsets.all(10),
                      child: Text(opt),
                    )))),
          );
        }).toList(),
      )));
    });
  }
}