getgenv().Upgrades = false;
getgenv().Birth = false;
getgenv().Best = false;
getgenv().Egg = false;
 
function Unlock()
    spawn(function ()
        while getgenv().Upgrades == true do
local args = {[1] = "WalkSpeed2"} game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent:FindFirstChild("Upgrade Controller"):FireServer(unpack(args)) wait()
local args = {[1] = "CoinMultiplier3"} game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent:FindFirstChild("Upgrade Controller"):FireServer(unpack(args)) wait()
local args = {[1] = "HatchSpeed2"} game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent:FindFirstChild("Upgrade Controller"):FireServer(unpack(args)) wait()
local args = {[1] = "RebirthButtons2"} game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent:FindFirstChild("Upgrade Controller"):FireServer(unpack(args)) wait()
local args = {[1] = "Luck3"} game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent:FindFirstChild("Upgrade Controller"):FireServer(unpack(args)) wait()
local args = {[1] = "EXP"} game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent:FindFirstChild("Upgrade Controller"):FireServer(unpack(args)) wait()
        end
    end)
end
function Re()
    spawn(function ()
        while getgenv().Birth == true do
if RV == "1" then local args = {[1] = 1}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "2" then local args = {[1] = 2}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "3" then local args = {[1] = 3}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "5" then local args = {[1] = 4}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "10" then local args = {[1] = 5}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "15" then local args = {[1] = 6}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "25" then local args = {[1] = 7}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "50" then local args = {[1] = 8}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "75" then local args = {[1] = 9}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "100" then local args = {[1] = 10}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "500" then local args = {[1] = 11}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "1k" then local args = {[1] = 12}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "5k" then local args = {[1] = 13}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "10k" then local args = {[1] = 14}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
if RV == "20k" then local args = {[1] = 15}game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args)) wait(0.1) end
        end
    end)
end
function Equip()
    spawn(function ()
        while getgenv().Best == true do
local args = {[1] = "EquipBest",[2] = {}} game:GetService("ReplicatedStorage").GameClient.Events.RemoteFunction.HandlePet:InvokeServer(unpack(args)) wait(0.5)
        end
    end)
end
function Hatch(E, Q)
    spawn(function ()
        while getgenv().Egg == true do
local args = {[1] = E,[2] = Q} game:GetService("ReplicatedStorage").GameClient.Events.RemoteFunction.BuyEgg:InvokeServer(unpack(args)) wait(0.1)
        end
    end)
end
 
local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()
 
local w = library:CreateWindow("Free Hatchers")
 
local b = w:CreateFolder("Main")
 
b:Toggle("Auto Upgrade",function(val)
getgenv().Upgrades = val
Unlock()
end)
 
b:Toggle("Equip Best",function(val)
getgenv().Best = val
Equip()
end)
 
b:Toggle("Auto Rebirth",function(val)
getgenv().Birth = val
Re()
end)
 
b:Dropdown("Rebirth Quantity",{"1","2","3","5","10","15","25","50","75","100","500","1k","5k","10k","20k",},true,function(val)
RV = val
end)
 
b:Toggle("Auto Hatch",function(val)
getgenv().Egg = val
Hatch(EV, QV)
end)
 
b:Dropdown("Egg Quantity",{"Buy1","Buy3","Buy8"},true,function(val)
QV = val
end)
 
b:Dropdown("Select",{"Basic Egg","Wild Egg","Snowfall Egg","Glacier Egg","Beachball Egg","Sunshine Egg","Pail Egg","Ninja Egg","Yokai Egg","Busy City Egg","Technology Egg","Cupid's Egg"},true,function(val)
EV = val
end)
 
local b = w:CreateFolder("Teleports")
 
b:Dropdown("Select",{"World 1","World 2","World 3","World 4","World 5"},true,function(val)
WV = val
end)
 
b:Button("Teleport",function()
if WV == "World 1" then TPCFrame(game:GetService("Workspace").MainWorldTP.CFrame) end
if WV == "World 2" then TPCFrame(game:GetService("Workspace").World2TP.CFrame) end
if WV == "World 3" then TPCFrame(game:GetService("Workspace").World3TP.CFrame) end
if WV == "World 4" then TPCFrame(game:GetService("Workspace").World4TP.CFrame) end
if WV == "World 5" then TPCFrame(game:GetService("Workspace").World5TP.CFrame) end
end)
 
b:Label("Made by X_LuaF#0705",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(69,69,69);})
 
local w = library:CreateWindow("LocalPlayer")
 
local b = w:CreateFolder("LP")
 
b:DestroyGui()
 
b:Button("Copy Discord Invite",function() setclipboard("discord.gg/8tRb8MQcW5") end)
b:Button("Full Version",function() loadstring(game:HttpGet("https://pastebin.com/raw/GphZf9Xe", true))() end)
b:Button("Rejoin",function() loadstring(game:HttpGet("https://pastebin.com/raw/mM7JBG5h", true))() end)
b:Button("Reset",function() loadstring(game:HttpGet("https://pastebin.com/raw/EEY6SATj", true))() end)
 
local S
local J
local H
local G
 
b:Box("Speed","number",function(val) S = val end)
b:Box("Jump","number",function(val) J = val end)
b:Box("Hip Height","number",function(val) H = val end)
b:Box("Gravity","number",function(val) G = val end)
 
b:Toggle("Speed",function(bool) getgenv().Speed = bool Speed(S) end)
b:Toggle("Jump",function(bool) getgenv().Jump = bool Jump(J) end)
b:Toggle("Hip Height",function(bool) getgenv().Hip = bool Hip(H) end)
b:Toggle("Gravity",function(bool) getgenv().Grav = bool Grav(G) end)
 
b:Slider("FOV (Default is 70)",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)
 
getgenv().Speed = false;
getgenv().Jump = false;
getgenv().Hip = false;
getgenv().Chat = false;
getgenv().Grav = false;
 
function TPCFrame(Player_CFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end
 
function Chat(Mes, Freq)
    spawn(function ()
        while getgenv().Chat == true do
local args = {[1] = Mes,[2] = "All"} game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
wait(Freq)
        end
    end)
end
 
function Speed(Nume)
    spawn(function ()
        if getgenv().Speed == true then
            while getgenv().Speed == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Nume
                wait()
            end
        elseif getgenv().Speed == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end)
end
function Jump(Nume)
    spawn(function ()
        if getgenv().Jump == true then
            while getgenv().Jump == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Nume
                wait()
        end
    elseif getgenv().Jump == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 50
        end
    end)
end
function Hip(Nume)
    spawn(function ()
        if getgenv().Hip == true then
            while getgenv().Hip == true do
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = Nume
            wait()
        end
    elseif getgenv().Hip == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = 0.1
        end
    end)
end
function Grav(Nume)
    spawn(function ()
        if getgenv().Grav == true then
            while getgenv().Grav == true do
                game:GetService("Workspace").Gravity = Nume
            wait()
        end
    elseif getgenv().Grav == false then
        game:GetService("Workspace").Gravity = 196.2
        end
    end)
end