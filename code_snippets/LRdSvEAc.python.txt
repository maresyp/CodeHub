19. Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в кучу один камень, добавить два камня или увеличить количество камней в куче в два раза. При этом нельзя повторять ход, который только что сделал второй игрок. Например, если в начале игры в куче 3 камня, Петя может первым ходом получить кучу из 4, 5 или 6 камней. Если Петя получил кучу из 5 камней (добавил 2 камня), то следующим ходом Ваня может получить 6 или 10 камней. Получить 7 камней Ваня не может, так как для этого нужно добавить 2 камня, а такой ход только что сделал Петя. Чтобы делать ходы, у каждого игрока есть неограниченное количество камней. Игра завершается, когда количество камней в куче становится не менее 34. Победителем считается игрок, сделавший последний ход, то есть первым получивший кучу, в которой будет 34 или больше камней. В начальный момент в куче было S камней, 1 ≤ S ≤ 33. Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника. Укажите такое значение S, при котором Петя не может выиграть за один ход, но при любом ходе Пети Ваня может выиграть своим первым ходом.
 
print('задача 19:')
def h(x,p,last):
    a=[]
    if last!=1:
        a.append(f(x+1,p+1,1))
    if last!=2:
        a.append(f(x+2,p+1,2))
    if last!=3:
        a.append(f(x*2,p+1,3))
    return a
 
def f(x,p,last):
    if x>=34 or p>2:
        return p==2
    elif p%2==0:
        return  all(h(x,p,last)) 
    else:
        return  any(h(x,p,last))
    
for s in range(1,33+1):
    if f(s,0,0)==1:
        print(s)
 
20. Для игры, описанной в задании 19, существует несколько таких значений S, при которых у Пети есть выигрышная стратегия, причём Петя не может выиграть первым ходом, но может выиграть своим вторым ходом независимо от того, как будет ходить Ваня. Найдите наименьшее и наибольшее из таких значений S. В ответе запишите сначала наименьшее, затем наибольшее значение.
print('задача 20:')
def h(x,p,last):
    a=[]
    if last!=1:
        a.append(f(x+1,p+1,1))
    if last!=2:
        a.append(f(x+2,p+1,2))
    if last!=3:
        a.append(f(x*2,p+1,3))
    return a
 
def f(x,p,last):
    if x>=34 or p>3:
        return p==3
    elif p%2!=0:
        return  all(h(x,p,last)) 
    else:
        return  any(h(x,p,last))
    
for s in range(1,33+1):
    if f(s,0,0)==1:
        print(s)
 
 
21. Для игры, описанной в задании 19, найдите значение S, при котором у Вани есть выигрышная стратегия, позволяющая ему выиграть вторым ходом при любой игре Пети, но у Вани нет стратегии, которая позволяла бы ему гарантированно выиграть первым ходом.
 
print('задача 21:')
def h(x,p,last):
    a=[]
    if last!=1:
        a.append(f(x+1,p+1,1))
    if last!=2:
        a.append(f(x+2,p+1,2))
    if last!=3:
        a.append(f(x*2,p+1,3))
    return a
 
def f(x,p,last):
    if x>=34 or p>4:
        return p==4
    elif p%2==0:
        return  all(h(x,p,last)) 
    else:
        return  any(h(x,p,last))
    
for s in range(1,33+1):
    if f(s,0,0)==1:
        print(s)